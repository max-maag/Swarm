// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["entityProcessingSystem", "position", "render"], function(EntityProcessingSystem, Position, Render) {
    var Renderer;
    return Renderer = (function(_super) {
      __extends(Renderer, _super);

      function Renderer(container) {
        this.container = container;
        this.onEntityRemoved = __bind(this.onEntityRemoved, this);
        this.onEntityAdded = __bind(this.onEntityAdded, this);
        Renderer.__super__.constructor.call(this, ["position", "render"]);
      }

      Renderer.prototype.processEntity = function(e, dt) {
        e.render.sprite.position.x = e.position.vector.x - e.render.sprite.width / 2;
        return e.render.sprite.position.y = e.position.vector.y - e.render.sprite.height / 2;
      };

      Renderer.prototype.onEntityAdded = function(e) {
        return this.container.addChild(e.render.sprite);
      };

      Renderer.prototype.onEntityRemoved = function(e) {
        return this.container.removeChild(e.render.sprite);
      };

      return Renderer;

    })(EntityProcessingSystem);
  });

}).call(this);
