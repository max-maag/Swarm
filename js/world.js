// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define([], function() {
    var World;
    return World = (function() {
      function World() {
        this.update = __bind(this.update, this);
        this.removeEntity = __bind(this.removeEntity, this);
        this.addEntity = __bind(this.addEntity, this);
        this.addSystem = __bind(this.addSystem, this);
        this.entities = [];
        this.systems = [];
      }

      World.prototype.addSystem = function(system) {
        return this.systems.push(system);
      };

      World.prototype.addEntity = function(entity) {
        var s, _i, _len, _ref, _results;
        this.entities[entity.id] = entity;
        _ref = this.systems;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          s = _ref[_i];
          _results.push(s.checkEntity(entity));
        }
        return _results;
      };

      World.prototype.removeEntity = function(entity) {
        var s, _i, _len, _ref;
        _ref = this.systems;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          s = _ref[_i];
          s.removeEntity(entity);
        }
        return delete this.entities[entity.id];
      };

      World.prototype.update = function(dt) {
        var s, _i, _len, _ref, _results;
        _ref = this.systems;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          s = _ref[_i];
          _results.push(s.process(dt));
        }
        return _results;
      };

      return World;

    })();
  });

}).call(this);
