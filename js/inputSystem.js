// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['inputEvent', 'entityProcessingSystem', 'gravitonFactory', 'flowFactory'], function(InputEvent, EntityProcessingSystem, GravitonFactory, FlowFactory) {
    var InputSystem;
    return InputSystem = (function(_super) {
      __extends(InputSystem, _super);

      function InputSystem(world, gameContainer) {
        this.world = world;
        this.gameContainer = gameContainer;
        InputSystem.__super__.constructor.call(this, ['event']);
      }

      InputSystem.prototype.processEntity = function(e, dt) {
        var mousex, mousey;
        mousex = e.event.offsetX - this.gameContainer.position.x;
        mousey = e.event.offsetY - this.gameContainer.position.y;
        switch (e.event.type) {
          case 'mousedown':
            if (e.event.iconid === 0) {
              this.world.addEntity(GravitonFactory.build(mousex, mousey));
            }
            if (e.event.iconid === 1) {
              this.world.addEntity(FlowFactory.build(mousex, mousey));
            }
            break;
          default:
            console.log(e.event.type);
        }
        return this.world.removeEntity(e);
      };

      return InputSystem;

    })(EntityProcessingSystem);
  });

}).call(this);
