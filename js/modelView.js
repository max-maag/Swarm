// Generated by CoffeeScript 1.8.0
(function() {
  require(['vector'], function(Vector) {
    var ModelView;
    return ModelView = (function() {
      function ModelView(sprite, pos) {
        this.sprite = sprite;
        if (pos == null) {
          pos = new Vector();
        }
        this.sprite.position = new Vector(this.sprite.position);
        this.vel = new Vector();
        this.acc = new Vector();
      }

      ModelView.prototype.getPosition = function() {
        return this.sprite.position;
      };


      /*
        Use either as setPosition(number, number) or
        as setPosition(PIXI.Point)
       */

      ModelView.prototype.setPosition = function(x, y) {
        if (y != null) {
          return this.sprite.position.set(x, y);
        } else {
          return this.sprite.position.set(x.x, y.x);
        }
      };


      /*
        Use either as translate(number, number) or
        as translate(PIXI.Point)
       */

      ModelView.prototype.translate = function(x, y) {
        if (y != null) {
          return setPosition(this.position.x + x, this.position.y + y);
        } else {
          return setPosition;
        }
      };

      ModelView.prototype.getWidth = function() {
        return this.sprite.width;
      };

      ModelView.prototype.setWidth = function(width) {
        return this.sprite.width = width;
      };

      ModelView.prototype.getHeight = function() {
        return this.sprite.height;
      };

      ModelView.prototype.setHeight = function(height) {
        return this.sprite.height = height;
      };

      return ModelView;

    })();
  });

}).call(this);
